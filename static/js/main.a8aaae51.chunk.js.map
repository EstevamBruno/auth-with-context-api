{"version":3,"sources":["services/api.ts","services/auth.ts","contexts/auth.tsx","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","routes/app.routes.tsx","pages/Signin/styles.ts","pages/Signin/index.tsx","routes/auth.routes.tsx","routes/index.tsx","styles/global/global.ts","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","signIn","user","email","Error","password","Promise","resolve","setTimeout","token","name","AuthContext","createContext","AuthProvider","children","useState","setUser","loading","setLoading","errorMessage","setErrorMessage","userAuth","a","auth","response","defaults","headers","localStorage","setItem","JSON","stringify","message","useEffect","storagedUser","getItem","storagedToken","parse","loadStoragedData","Provider","value","signed","signOut","clear","useAuth","useContext","Header","styled","header","Container","div","Dashboard","type","onClick","size","color","AppRoutes","path","component","Signin","setEmail","setPassword","validateForm","setValidateForm","onSubmit","e","preventDefault","submit","htmlFor","autoFocus","id","onChange","currentTarget","className","AuthRoutes","Routes","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8aaae51.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3333',\r\n})\r\n\r\nexport default api;\r\n","import { AuthResponse } from \"../domains/authResponse/AuthResponse.interface\";\r\nimport UserAuth from \"../domains/user/userAuth.interface\";\r\n\r\nexport function signIn(user: UserAuth): Promise<AuthResponse> {\r\n  const emailValidate: string = 'auth@email.com';\r\n  const passwordValidate: string = '123456';\r\n\r\n  if (user.email !== emailValidate) {\r\n    throw new Error('E-mail invalid!');\r\n  } else if (user.password !== passwordValidate) {\r\n    throw new Error('Password invalid!');\r\n  } else {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve({\r\n          token: 'koakdasijhtnaslsdkjdshaegfoodasadewrasdsad',\r\n          user: {\r\n            email: 'auth@email.com',\r\n            name: 'Auth User',\r\n          },\r\n        });\r\n      }, 2_000);\r\n    });\r\n  }\r\n}\r\n","import React, { createContext, useState, useEffect, useContext } from \"react\";\r\nimport AuthContextData from \"../domains/authContextData/AuthContextData.interface\";\r\nimport api from '../services/api';\r\nimport * as auth from '../services/auth';\r\nimport User from \"../domains/user/user.interface\";\r\n\r\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\r\n\r\nexport const AuthProvider: React.FC = ({children}) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function loadStoragedData() {\r\n      const storagedUser = localStorage.getItem('@Auth:user');\r\n      const storagedToken = localStorage.getItem('@Auth:token');\r\n\r\n      if (storagedUser && storagedToken) {\r\n        // exemple the utilization with API for set token in headers\r\n        api.defaults.headers['Authorization'] = `Bearer ${storagedToken}`;\r\n\r\n        setUser(JSON.parse(storagedUser));\r\n        setLoading(false);\r\n      }\r\n\r\n      setLoading(false);\r\n    }\r\n\r\n    loadStoragedData();\r\n  }, [])\r\n\r\n  async function signIn(userAuth: any) {\r\n    setLoading(true);\r\n    try {\r\n      const response = await auth.signIn(userAuth);\r\n\r\n      setUser(response.user);\r\n\r\n      api.defaults.headers['Authorization'] = `Bearer ${response.token}`; // exemple the utilization with API for set token in headers\r\n\r\n      localStorage.setItem('@Auth:user', JSON.stringify(response.user));\r\n      localStorage.setItem('@Auth:token', response.token);\r\n      setLoading(false);\r\n    } catch(err) {\r\n      setErrorMessage(err.message);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  function signOut() {\r\n    localStorage.clear();\r\n    setUser(null);\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{signed: !!user, user, signIn, signOut, loading, errorMessage}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\n// hook customized\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Header = styled.header`\r\n  height: 10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.90);\r\n  color: #fff;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.90);\r\n  color: #fff;\r\n\r\n  div {\r\n    width: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    button {\r\n      padding: 15px;\r\n      border-radius: 5px;\r\n      border: none;\r\n      background-color: rgba(0, 0, 0, 0.30);\r\n      margin-bottom: 15px;\r\n      transition: background-color 0.2s;\r\n\r\n      :hover {\r\n        background-color: rgba(0, 0, 0, 0.12);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport { Container, Header } from './styles';\r\nimport { FaPowerOff } from 'react-icons/fa'\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const {signOut, user} = useAuth();\r\n\r\n  function handleSignOut() {\r\n    signOut();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header>\r\n        <p>Wellcome, {user?.name}</p>\r\n      </Header>\r\n      <Container>\r\n        <div>\r\n          <button type='button' onClick={() => handleSignOut()}><FaPowerOff size={34} color={'#fff'} /></button>\r\n          <p>email: {user?.email}</p>\r\n          <p>name: {user?.name}</p>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../pages/Dashboard';\r\n\r\nconst AppRoutes: React.FC = () => {\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path='/' component={Dashboard} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.90);\r\n  color: #fff;\r\n\r\n  h1 {\r\n    font-size: 32px;\r\n  }\r\n\r\n  p {\r\n    font-size: 18px;;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  form {\r\n    width: 250px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    div {\r\n      flex: 1;\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-bottom: 15px;\r\n\r\n      label {\r\n        margin-bottom: 5px;\r\n      }\r\n\r\n      input {\r\n        border: 1px solid rgba(0, 0, 0, 0.30);\r\n        background-color: rgba(0, 0, 0, 0.30);\r\n        color: #fff;\r\n        padding: 10px;\r\n        border-radius: 5px;\r\n        transition: border 0.8s;\r\n\r\n        :focus {\r\n          border: 1px solid #fff;\r\n        }\r\n      }\r\n    }\r\n\r\n    button {\r\n      cursor: pointer;\r\n      padding: 10px;\r\n      font-size: 18px;\r\n      border: none;\r\n      border-radius: 5px;\r\n      background-color: rgba(0, 0, 0, 0.30);\r\n      color: #fff;\r\n      transition: background-color 0.2s;\r\n      margin-bottom: 20px;\r\n\r\n      :hover {\r\n        background-color: rgba(0, 0, 0, 0.12);\r\n      }\r\n    }\r\n\r\n    small {\r\n      color: #F71735;\r\n    }\r\n  }\r\n`;\r\n","import React, {useState, FormEvent} from 'react';\r\nimport { useAuth } from '../../contexts/auth';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Signin: React.FC = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [validateForm, setValidateForm] = useState(false);\r\n  const { signIn, loading, errorMessage } = useAuth();\r\n\r\n  function submit(e: FormEvent) {\r\n    e.preventDefault();\r\n    setValidateForm(true);\r\n\r\n    const userAuth = {email, password};\r\n\r\n    if (!email || !password) return;\r\n\r\n    signIn(userAuth);\r\n    setValidateForm(false);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Auth Login</h1>\r\n      <p>experience</p>\r\n      <form onSubmit={(e: FormEvent) => submit(e)}>\r\n        <div>\r\n          <label htmlFor=\"email\">E-mail</label>\r\n          <input autoFocus id=\"email\" type=\"email\"\r\n            value={email}\r\n            onChange={(e: React.FormEvent<HTMLInputElement>) => setEmail(e.currentTarget.value)}\r\n          />\r\n          {validateForm && !email && <small>E-mail is required!</small>}\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input id=\"password\" type=\"password\"\r\n            value={password}\r\n            onChange={(e: React.FormEvent<HTMLInputElement>) => setPassword(e.currentTarget.value)}\r\n          />\r\n          {validateForm && !password && <small>Password is required!</small>}\r\n        </div>\r\n        <button type='submit'>{loading ? <i className='fa fa-spinner fa-pulse'></i> : 'Sign in'}</button>\r\n        <small>{errorMessage}</small>\r\n      </form>\r\n    </Container>\r\n  );\r\n\r\n}\r\n\r\nexport default Signin;\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport Signin from '../pages/Signin';\r\n\r\nconst AuthRoutes: React.FC = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path='/' component={Signin} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default AuthRoutes;\r\n","import React from 'react';\r\nimport { useAuth } from '../contexts/auth';\r\n\r\nimport AppRoutes from './app.routes';\r\nimport AuthRoutes from './auth.routes';\r\n\r\nconst Routes: React.FC = () => {\r\n  const {signed} = useAuth();\r\n\r\n  return signed ? <AppRoutes /> : <AuthRoutes />;\r\n}\r\n\r\nexport default Routes;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport 'font-awesome/css/font-awesome.css'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html, body, #root {\r\n    width: 100%;\r\n    height: 100%;\r\n    font: 400 14px Roboto, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport {AuthProvider} from './contexts/auth'\n\nimport Routes from './routes'\nimport GlobalStyle from './styles/global/global';\n\nconst App: React.FC = () => {\n\n  return (\n      <BrowserRouter>\n        <AuthProvider>\n          <GlobalStyle />\n          <Routes />\n        </AuthProvider>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}